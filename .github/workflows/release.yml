name: release

on:
  push:
    tags:
      - v*

env:
  REPO_NAME: ${{ github.repository_owner }}/era-test-node
  CARGO_TERM_COLOR: always

jobs:
  extract-version:
    name: extract version
    runs-on: ubuntu-latest
    steps:
      - name: Extract version
        id: extract_version
        run: echo "VERSION=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_OUTPUT
    outputs:
      VERSION: ${{ steps.extract_version.outputs.VERSION }}

  build:
    name: build release
    strategy:
      matrix:
        arch: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu, x86_64-apple-darwin, aarch64-apple-darwin]
        include:
          - arch: x86_64-unknown-linux-gnu
            platform: ubuntu-20.04
          - arch: aarch64-unknown-linux-gnu
            platform: ubuntu-20.04
          - arch: x86_64-apple-darwin
            platform: macos-latest
          - arch: aarch64-apple-darwin
            platform: macos-latest

    runs-on: ${{ matrix.platform }}
    needs: [extract-version]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install Rust nightly
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly-2024-08-01

      - name: Install target
        run: rustup target add ${{ matrix.arch }} --toolchain nightly-2024-08-01

      - name: Install linker for aarch64-unknown-linux-gnu
        if: matrix.arch == 'aarch64-unknown-linux-gnu' && runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Install linker for aarch64-apple-darwin
        if: matrix.arch == 'aarch64-apple-darwin' && runner.os == 'macOS'
        run: |
          sudo softwareupdate --install-rosetta --agree-to-license || true
          rustup target add aarch64-apple-darwin
          export SDKROOT=$(xcrun --sdk macosx --show-sdk-path)
          export MACOSX_DEPLOYMENT_TARGET=$(sw_vers -productVersion)
          echo "[target.aarch64-apple-darwin]" >> ~/.cargo/config
          echo 'linker = "clang"' >> ~/.cargo/config

      - name: Run cargo clean
        run: cargo clean

      - name: Build era-test-node for ${{ matrix.arch }}
        run: |
          cargo build --bin era_test_node --target ${{ matrix.arch }} --release

      - name: Rename and move binary
        run: |
          mkdir artifacts
          mv target/${{ matrix.arch }}/release/era_test_node ./artifacts

      - name: Create artifacts
        run: |
          cd artifacts
          tar -czf era_test_node-${{ needs.extract-version.outputs.VERSION }}-${{ matrix.arch }}.tar.gz era_test_node*
          mv *tar.gz* ..

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: era_test_node-${{ needs.extract-version.outputs.VERSION }}-${{ matrix.arch }}.tar.gz
          path: era_test_node-${{ needs.extract-version.outputs.VERSION }}-${{ matrix.arch }}.tar.gz

  draft-release:
    name: draft release
    needs: [build, extract-version]
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.extract-version.outputs.VERSION }}
    permissions:
      contents: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Generate full changelog
        id: changelog
        run: |
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 ${{ env.VERSION }}^)..${{ env.VERSION }})" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Generate list of contributors
        id: contributors
        run: |
          echo "CONTRIBUTORS<<EOF" >> $GITHUB_OUTPUT
          echo "$(git log --pretty=format:"- %aN (%aE)" $(git describe --tags --abbrev=0 ${{ env.VERSION }}^)..${{ env.VERSION }} | sort | uniq)" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create release draft
        env:
          GITHUB_USER: ${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          body=$(cat <<- "ENDBODY"
          ## 📋 Summary

          ### 🐛 Bug Fixes:
          - TBD

          ### ✨ New Features:
          - TBD

          ### ⚠️ Breaking Changes:
          - TBD

          ## 📜 All Changes

          ${{ steps.changelog.outputs.CHANGELOG }}

          ## ⭐ Contributors

          ${{ steps.contributors.outputs.CONTRIBUTORS }}

          ## 📥 Binaries

          | System | Architecture | Binary |
          |:---:|:---:|:---:|
          | <img src="https://simpleicons.org/icons/linux.svg" style="width: 32px;"/> | x86_64 | [era-test-node-${{ env.VERSION }}-x86_64-unknown-linux-gnu.tar.gz](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/era_test_node-${{ env.VERSION }}-x86_64-unknown-linux-gnu.tar.gz) |
          | <img src="https://simpleicons.org/icons/linux.svg" style="width: 32px;"/> | aarch64 | [era-test-node-${{ env.VERSION }}-aarch64-unknown-linux-gnu.tar.gz](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/era_test_node-${{ env.VERSION }}-aarch64-unknown-linux-gnu.tar.gz) |
          | <img src="https://simpleicons.org/icons/apple.svg" style="width: 32px;"/> | x86_64 | [era-test-node-${{ env.VERSION }}-x86_64-apple-darwin.tar.gz](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/era_test_node-${{ env.VERSION }}-x86_64-apple-darwin.tar.gz) |
          | <img src="https://simpleicons.org/icons/apple.svg" style="width: 32px;"/> | aarch64 | [era-test-node-${{ env.VERSION }}-aarch64-apple-darwin.tar.gz](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/era_test_node-${{ env.VERSION }}-aarch64-apple-darwin.tar.gz) |
          ENDBODY
          )
          assets=()
          for asset in ./era_test_node-*.tar.gz*; do
              assets+=("$asset#$asset")
          done
          tag_name="${{ env.VERSION }}"
          echo "$body" | gh release create "$tag_name" "${assets[@]}" --draft -F "-" -t "Release: $tag_name"
